name: Deploy Purkinje VM with Terraform

on:
  workflow_dispatch:
    inputs:
      USE_DOCKER:
        description: 'Use Docker on startup-script'
        required: true
        default: 'false'
      RUN_TEST:
        description: 'Run test script'
        required: false
        default: 'false'

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Terraform Apply to GCP
    runs-on: ubuntu-latest
    environment: PROD

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Decode GOOGLE_CREDENTIALS secret to file
        run: echo "$GOOGLE_CREDENTIALS" > ./src/gcp-key.json
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Decode GMAIL_TOKEN_JSON to token.json
        run: echo "$GMAIL_TOKEN_JSON" > ./src/token.json
        env:
          GMAIL_TOKEN_JSON: ${{ secrets.GMAIL_TOKEN_JSON }}
      
      - name: Upload token.json to GCS
        run: |
          gcloud auth activate-service-account --key-file=./src/gcp-key.json
          gcloud config set project purkinje-learning
          gsutil cp ./src/token.json gs://purkinje-results-bucket/token.json
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./src/gcp-key.json

      - name: Upload test script to GCS
        if: github.event.inputs.RUN_TEST == 'true'
        run: |
          gcloud auth activate-service-account --key-file=./src/gcp-key.json
          gcloud config set project purkinje-learning
          gsutil cp ./src/test_scripts/test_gpu_pytorch.py gs://purkinje-results-bucket/test_gpu_pytorch.py
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./src/gcp-key.json


      - name: Delete existing VM if it exists
        run: |
          gcloud auth activate-service-account --key-file=./src/gcp-key.json
          gcloud config set project purkinje-learning
          gcloud compute instances delete purkinje-vm --zone=us-central1-f --quiet || true
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./src/gcp-key.json
          
      - name: Terraform Init
        run: terraform init
        working-directory: ./src/terraform

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="use_docker=${{ github.event.inputs.USE_DOCKER == 'true' }}"
            -var="test_script=${{ github.event.inputs.RUN_TEST == 'true' }}"
        working-directory: ./src/terraform

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="use_docker=${{ github.event.inputs.USE_DOCKER == 'true' }}"
            -var="test_script=${{ github.event.inputs.RUN_TEST == 'true' }}"
        working-directory: ./src/terraform
